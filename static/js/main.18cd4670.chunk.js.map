{"version":3,"sources":["Majors.js","App.js","reportWebVitals.js","index.js"],"names":["StyledTableCell","makeStyles","root","minWidth","maxWidth","title","fontSize","pos","marginBottom","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","TableCell","Majors","action","hover","TableRow","props","state","value","post","gotmajors_flag","open","given_file","handleSubmit","bind","handleChange","event","console","log","this","setState","target","preventDefault","fetch","method","headers","then","response","contentType","get","json","data","category","majors_data","person","person_data","name","links","majors","minors","cats","dawgs","push","TableBody","align","Container","justify","Card","CardContent","Typography","variant","FormControl","NativeSelect","multiple","onChange","selected","FormHelperText","htmlFor","TableContainer","component","Paper","Table","stickyHeader","className","size","aria-label","TableHead","React","Component","App","username","password","redirect","ReactDOM","render","document","getElementById","Grid","container","spacing","direction","alignItems","style","minHeight","item","xs","text-align","TextField","type","id","placeholder","fullWidth","Button","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.18cd4670.chunk.js","sourcesContent":["import React, { Component, useCallback } from \"react\";\nimport \"fontsource-roboto\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport Container from \"@material-ui/core/Container\";\nimport { DropzoneAreaBase } from \"material-ui-dropzone\";\nimport { withRouter } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    maxWidth: 500,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nclass Majors extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"N/A\",\n      post: null,\n      gotmajors_flag: false,\n      open: false,\n      given_file: \"aaaa\",\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    // this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(\"Change!\");\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"new submit\");\n    this.setState({ value: event.target.value });\n    console.log(event.target.value);\n    fetch(\"https://majors-fair.herokuapp.com/api/\", {\n      method: \"POST\",\n      // mode:\"no-cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Credentials\": true,\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      // body: JSON.stringify({\n      //   value: event.target.value\n      //   // file: this.state.post\n      // }),\n    })\n      //issue request from fromtend to backend\n      .then((response) => {\n        console.log(response);\n        const contentType = response.headers.get('Content-Type');\n        console.log(contentType);\n        return response.json();\n      })\n      .then((data) => {\n        console.log(\"Here!\")\n        this.setState({ post: data });\n        this.setState({ gotmajors_flag: true });\n      });\n    console.log(\"HandleSubmit complete.\")\n  }\n\n  // handleUpload(fileObj) {\n  //   console.log(\"Uploading\");\n  //   // data.append(\"name\", event.target.fil);\n  //   console.log(JSON.stringify(fileObj));\n\n  //   fetch(\"/api/upload/\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-type\": \"multipart/form-data\",\n  //     },\n  //     body: fileObj,\n  //   })\n  //     //issue request from fromtend to backend\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       this.setState({ post: data });\n  //     });\n  // }\n\n  render() {\n    const post = this.state.post;\n    const value = this.state.value;\n    var category = null;\n    var majors_data = [];\n    if (this.state.gotmajors_flag) {\n      category = post[value];\n      for (var person in category) {\n        var person_data = category[person];\n        var name = person;\n        var links = person_data[\"Zoom Link\"];\n        var majors = person_data[\"Majors\"];\n        var minors = person_data[\"Minors\"];\n        var cats = person_data[\"Certificates\"];\n        var dawgs = person_data[\"Double Dawgs / Double Majors\"];\n\n        majors_data.push(\n          <TableBody>\n            <TableCell align=\"right\">{name} </TableCell>\n            <TableCell align=\"right\">{majors} </TableCell>\n            <TableCell align=\"right\">{links} </TableCell>\n            <TableCell align=\"right\">{minors} </TableCell>\n            <TableCell align=\"right\">{cats} </TableCell>\n            <TableCell align=\"right\">{dawgs} </TableCell>\n          </TableBody>\n        );\n      }\n    }\n\n    return (\n      <Container maxWidth=\"lg\" justify=\"center\">\n        <Card>\n          <CardContent>\n            <div align=\"center\">\n              <Typography variant=\"h3\">\n                Majors Fair Excel Data Parser\n              </Typography>\n              <Typography variant=\"caption\">\n                The table populates correctly based on the latest \"Masterlist\"\n                excelsheet but may need to be double-checked for accuracy.\n              </Typography>\n              {/* \n              <Typography variant=\"h6\">Upload file:</Typography>\n              <DropzoneAreaBase height=\"10%\"\n                acceptedFiles={[\".xlsx\"]}\n                filesLimit={1}\n                enctype=\"multipart/form-data\"\n                dropzoneText=\"Drop your Excel file here\"\n                onAdd={(fileobj) => {\n                  console.log(\"onAdd\", fileobj);\n                  this.handleUpload(fileobj);\n                }}\n              >\n              </DropzoneAreaBase> */}\n            </div>\n            <div align=\"center\">\n              <FormControl variant=\"outlined\" action=\"\">\n                <NativeSelect\n                  multiple={false}\n                  value={this.state.value}\n                  onChange={this.handleSubmit}\n                >\n                  <option selected value=\"N/A\">\n                    Choose one...\n                  </option>\n                  <option value=\"Creative\">Creative</option>\n                  <option value=\"Culture\">Culture</option>\n                  <option value=\"Life\">Life</option>\n                  <option value=\"Nature\">Nature</option>\n                  <option value=\"Technology\">Technology</option>\n                  <option value=\"Leadership\">Leadership</option>\n                  <option value=\"DoubleDawgs\">\n                    DoubleDawgs, FinAid, Grad School\n                  </option>\n                  <option value=\"Service\">Service</option>\n                </NativeSelect>\n                <FormHelperText htmlFor=\"age-native-helper\">\n                  Please select a category\n                </FormHelperText>\n              </FormControl>\n            </div>\n\n            <TableContainer component={Paper}>\n              <Table\n                stickyHeader\n                className=\"Majors Fair Excel Data Parser\"\n                size=\"small\"\n                aria-label=\"a dense table\"\n              >\n                <TableHead>\n                  <TableRow>\n                    <StyledTableCell align=\"center\">Name</StyledTableCell>\n                    <StyledTableCell align=\"center\">Majors</StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      Meeting Room\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">Minors</StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      Certificates\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                      Double Dawgs/ Double Majors\n                    </StyledTableCell>\n                  </TableRow>\n                </TableHead>\n                {majors_data}\n              </Table>\n            </TableContainer>\n          </CardContent>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nexport default Majors;\n","import React from \"react\";\nimport \"fontsource-roboto\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Majors from \"./Majors\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\", redirect: false };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      username: event.state.username,\n      password: event.state.password,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"submit\");\n    console.log(this.state.username);\n    console.log(this.state.password);\n\n    if (this.state.username == \"admin\" && this.state.password == \"uga24\") {\n      this.state.redirect = true;\n      console.log(\"We made it!\");\n   \nReactDOM.render(\n  <Majors />,\n  document.getElementById('root')\n);\n      \n    }\n  }\n\n  render() {\n    return (\n      <Grid\n  container\n  spacing={0}\n  direction=\"row\"\n  alignItems=\"center\"\n  justify=\"center\"\n  style={{ minHeight: '100vh' }}\n>\n        <Grid item xs={3}>\n          <div text-align=\"center\">\n            <Typography variant=\"h4\">\n              Please enter a login for access:\n            </Typography>\n            <TextField\n              type=\"username\"\n              id=\"standard-basic\"\n              placeholder=\"Username\"\n              fullWidth\n              name=\"username\"\n              variant=\"outlined\"\n              value={this.state.username}\n              onChange={(event) =>\n                this.setState({\n                  [event.target.name]: event.target.value,\n                })\n              }\n            />\n\n            <TextField\n              id=\"standard-basic\"\n              type=\"password\"\n              placeholder=\"Password\"\n              fullWidth\n              name=\"password\"\n              variant=\"outlined\"\n              value={this.state.password}\n              onChange={(event) =>\n                this.setState({\n                  [event.target.name]: event.target.value,\n                })\n              }\n            />\n            <Button\n              onClick={(event) => {\n                this.handleSubmit(event);\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              Submit\n            </Button>\n            </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Majors from './Majors';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}